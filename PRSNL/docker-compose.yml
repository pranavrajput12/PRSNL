# PRSNL Docker Configuration
# NOTE: We use local PostgreSQL for the main database
# This file is for Redis and other services only

services:
  # Database is now using local PostgreSQL (not Docker)
  # To use Docker database again, uncomment the db service below
  
  # db:
  #   image: pgvector/pgvector:pg16
  #   container_name: prsnl_db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: prsnl
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "${POSTGRES_PORT:-5432}:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./backend/app/db/schema.sql:/docker-entrypoint-initdb.d/02-schema.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres -d prsnl"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  redis:
    image: redis:7-alpine
    container_name: prsnl_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: prsnl_backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - /Users/pronav/Library/Application Support/Arc:/chrome-profile:ro
    depends_on:
      # db:
      #   condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Using local database instead of Docker
      DATABASE_URL: postgresql://pronav@host.docker.internal:5432/prsnl
      PG_CONN_STR: postgresql://postgres:postgres@db:5432/prsnl
      REDIS_URL: redis://redis:6379
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_ENDPOINT: https://airops.openai.azure.com
      AZURE_OPENAI_DEPLOYMENT: gpt-4.1
      AZURE_OPENAI_API_VERSION: 2025-01-01-preview
      AZURE_OPENAI_EMBEDDING_DEPLOYMENT: text-embedding-ada-002
      AZURE_OPENAI_WHISPER_DEPLOYMENT: whisper
      # Additional AI Services
      FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY}
      # Zero-cache code reloads
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

  frontend:
    build: ./frontend
    container_name: prsnl_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3003}:3003"
    environment:
      PUBLIC_API_URL: http://backend:8000
      NODE_ENV: development
      PORT: 3003
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: